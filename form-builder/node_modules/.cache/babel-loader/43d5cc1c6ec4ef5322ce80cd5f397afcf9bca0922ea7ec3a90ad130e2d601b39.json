{"ast":null,"code":"export let newAllQuestionKeyCombinationArray = [];\nconst nonKeyWords = [\"as\", \"and\", \"does\", \"all\", \"up\", \"that\", \"been\", \"this\", \"the\", \"of\", \"from\", \"be\", \"is\", \"any\", \"to\", \"what\"];\nfunction keyCreator(keyquestion) {\n  let singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    const element1 = wordsArray[i];\n    const element2 = wordsArray[i + 1];\n    const key = `${element1}_${element2}`;\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\n    if (wordsArray.indexOf(element2) === wordsArray.length - 1) break;\n  }\n  for (let index = 0; index < nonKeyWords.length; index++) {\n    const element = nonKeyWords[index];\n    singleQuestionKeyCombinationArray = singleQuestionKeyCombinationArray.filter(word => !word.includes(element));\n  }\n  var randomKeyOfSingleQuestion = singleQuestionKeyCombinationArray.length === 0 ? \"enter_your_key\" : singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\n    if (singleCharacterOfKey === \"?\" || singleCharacterOfKey === \":\" || singleCharacterOfKey === \",\" || singleCharacterOfKey === \"(\" || singleCharacterOfKey === \")\" || singleCharacterOfKey === \".\" || singleCharacterOfKey === \"/\" || singleCharacterOfKey === \"’\" || singleCharacterOfKey === \"-\") {\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(singleCharacterOfKey, \"\");\n    }\n  }\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\n  } else {\n    newAllQuestionKeyCombinationArray.push(singleQuestionKeyCombinationArray.length === 0 ? \"Enter_your_key\" : `${randomKeyOfSingleQuestion}_1`);\n  }\n}\nexport default keyCreator;","map":{"version":3,"names":["newAllQuestionKeyCombinationArray","nonKeyWords","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","i","length","element1","element2","key","push","toLowerCase","indexOf","index","element","filter","word","includes","randomKeyOfSingleQuestion","Math","floor","random","singleCharacterOfKey","replace"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/keyCreator.js"],"sourcesContent":["export let newAllQuestionKeyCombinationArray = [];\r\nconst nonKeyWords = [\r\n  \"as\",\r\n  \"and\",\r\n  \"does\",\r\n  \"all\",\r\n  \"up\",\r\n  \"that\",\r\n  \"been\",\r\n  \"this\",\r\n  \"the\",\r\n  \"of\",\r\n  \"from\",\r\n  \"be\",\r\n  \"is\",\r\n  \"any\",\r\n  \"to\",\r\n  \"what\"\r\n];\r\nfunction keyCreator(keyquestion) {\r\n  let singleQuestionKeyCombinationArray = [];\r\n  const wordsArray = keyquestion.split(\" \");\r\n  for (let i = 0; i < wordsArray.length; i++) {\r\n    const element1 = wordsArray[i];\r\n    const element2 = wordsArray[i + 1];\r\n    const key = `${element1}_${element2}`;\r\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\r\n    if (wordsArray.indexOf(element2) === wordsArray.length - 1) break;\r\n  }\r\n  for (let index = 0; index < nonKeyWords.length; index++) {\r\n    const element = nonKeyWords[index];\r\n    singleQuestionKeyCombinationArray =\r\n      singleQuestionKeyCombinationArray.filter(\r\n        (word) => !word.includes(element)\r\n      );\r\n  }\r\n\r\n  var randomKeyOfSingleQuestion =\r\n    singleQuestionKeyCombinationArray.length === 0\r\n      ? \"enter_your_key\"\r\n      : singleQuestionKeyCombinationArray[\r\n          Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n        ];\r\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\r\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\r\n    if (\r\n      singleCharacterOfKey === \"?\" ||\r\n      singleCharacterOfKey === \":\" ||\r\n      singleCharacterOfKey === \",\" ||\r\n      singleCharacterOfKey === \"(\" ||\r\n      singleCharacterOfKey === \")\" ||\r\n      singleCharacterOfKey === \".\" ||\r\n      singleCharacterOfKey === \"/\" ||\r\n      singleCharacterOfKey === \"’\" ||\r\n      singleCharacterOfKey === \"-\"\r\n    ) {\r\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(\r\n        singleCharacterOfKey,\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\r\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\r\n  } else {\r\n    newAllQuestionKeyCombinationArray.push(\r\n      singleQuestionKeyCombinationArray.length === 0\r\n        ? \"Enter_your_key\"\r\n        : `${randomKeyOfSingleQuestion}_1`\r\n    );\r\n  }\r\n}\r\n\r\nexport default keyCreator;\r\n"],"mappings":"AAAA,OAAO,IAAIA,iCAAiC,GAAG,EAAE;AACjD,MAAMC,WAAW,GAAG,CAClB,IAAI,EACJ,KAAK,EACL,MAAM,EACN,KAAK,EACL,IAAI,EACJ,MAAM,EACN,MAAM,EACN,MAAM,EACN,KAAK,EACL,IAAI,EACJ,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,MAAM,CACP;AACD,SAASC,UAAU,CAACC,WAAW,EAAE;EAC/B,IAAIC,iCAAiC,GAAG,EAAE;EAC1C,MAAMC,UAAU,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,MAAME,QAAQ,GAAGJ,UAAU,CAACE,CAAC,CAAC;IAC9B,MAAMG,QAAQ,GAAGL,UAAU,CAACE,CAAC,GAAG,CAAC,CAAC;IAClC,MAAMI,GAAG,GAAI,GAAEF,QAAS,IAAGC,QAAS,EAAC;IACrCN,iCAAiC,CAACQ,IAAI,CAACD,GAAG,CAACE,WAAW,EAAE,CAAC;IACzD,IAAIR,UAAU,CAACS,OAAO,CAACJ,QAAQ,CAAC,KAAKL,UAAU,CAACG,MAAM,GAAG,CAAC,EAAE;EAC9D;EACA,KAAK,IAAIO,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGd,WAAW,CAACO,MAAM,EAAEO,KAAK,EAAE,EAAE;IACvD,MAAMC,OAAO,GAAGf,WAAW,CAACc,KAAK,CAAC;IAClCX,iCAAiC,GAC/BA,iCAAiC,CAACa,MAAM,CACrCC,IAAI,IAAK,CAACA,IAAI,CAACC,QAAQ,CAACH,OAAO,CAAC,CAClC;EACL;EAEA,IAAII,yBAAyB,GAC3BhB,iCAAiC,CAACI,MAAM,KAAK,CAAC,GAC1C,gBAAgB,GAChBJ,iCAAiC,CAC/BiB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGnB,iCAAiC,CAACI,MAAM,CAAC,CACrE;EACP,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,yBAAyB,CAACZ,MAAM,EAAED,CAAC,EAAE,EAAE;IACzD,MAAMiB,oBAAoB,GAAGJ,yBAAyB,CAACb,CAAC,CAAC;IACzD,IACEiB,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,IAC5BA,oBAAoB,KAAK,GAAG,EAC5B;MACAJ,yBAAyB,GAAGA,yBAAyB,CAACK,OAAO,CAC3DD,oBAAoB,EACpB,EAAE,CACH;IACH;EACF;EAEA,IAAI,CAACxB,iCAAiC,CAACmB,QAAQ,CAACC,yBAAyB,CAAC,EAAE;IAC1EpB,iCAAiC,CAACY,IAAI,CAACQ,yBAAyB,CAAC;EACnE,CAAC,MAAM;IACLpB,iCAAiC,CAACY,IAAI,CACpCR,iCAAiC,CAACI,MAAM,KAAK,CAAC,GAC1C,gBAAgB,GACf,GAAEY,yBAA0B,IAAG,CACrC;EACH;AACF;AAEA,eAAelB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}