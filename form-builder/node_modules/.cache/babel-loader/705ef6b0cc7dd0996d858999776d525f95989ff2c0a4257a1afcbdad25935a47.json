{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive\\\\Documents\\\\GitHub\\\\form-builder\\\\form-builder\\\\src\\\\formbuild.js\";\nimport React from \"react\";\nimport questionsArray from \"./data\";\nimport JsListCreator from \"./JSListCreator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet newAllQuestionKeyCombinationArray = [];\nlet emptyKeyArray = [];\nfunction KeyListCreator(_ref) {\n  let {\n    array\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: array.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: `\"${item}\",`\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = KeyListCreator;\nfunction keyCreator(keyquestion) {\n  const singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    const element1 = wordsArray[i];\n    const element2 = wordsArray[i + 1];\n    const element3 = wordsArray[i + 2];\n    const key = `${element1}_${element2}_${element3}`;\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\n    if (wordsArray.indexOf(element3) === wordsArray.length - 1) break;\n  }\n  var randomKeyOfSingleQuestion = singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\n    if (singleCharacterOfKey === \"?\" || singleCharacterOfKey === \":\" || singleCharacterOfKey === \",\" || singleCharacterOfKey === \"(\" || singleCharacterOfKey === \")\" || singleCharacterOfKey === \".\" || singleCharacterOfKey === \"/\" || singleCharacterOfKey === \"’\" || singleCharacterOfKey === \"-\") {\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(singleCharacterOfKey, \"\");\n    }\n  }\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\n  } else {\n    var anotherRandomKey = singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n    for (let i = 0; i < anotherRandomKey.length; i++) {\n      const singleCharacterOfKey = anotherRandomKey[i];\n      if (singleCharacterOfKey === \"?\" || singleCharacterOfKey === \":\" || singleCharacterOfKey === \",\" || singleCharacterOfKey === \"(\" || singleCharacterOfKey === \")\" || singleCharacterOfKey === \"/\" || singleCharacterOfKey === \"’\" || singleCharacterOfKey === \"-\" || singleCharacterOfKey === \".\") {\n        anotherRandomKey = anotherRandomKey.replace(singleCharacterOfKey, \"\");\n      }\n    }\n    newAllQuestionKeyCombinationArray.push(anotherRandomKey);\n  }\n}\nfunction StructureCreator(_ref2) {\n  let {\n    num,\n    question,\n    keyCreator,\n    serialNo\n  } = _ref2;\n  keyCreator(question);\n  const structureHTML = `\n  <div class=\"section\">\n            <div class=\"rows\">\n              <div class=\"col-1 text-center\">\n                <p class=\"num-label\">${serialNo}</p>\n              </div>\n              <div class=\"col-11\">\n                <label class=\"ors-form-label\">${question}</label>\n                <div class=\"rows\">\n                  <div class=\"col-3 main-radio\" data-fieldtype=\"radio-group\" data-bind=\"foreach:{\n                      data:[\n                        {id:'yes',label:'Yes'},\n                        {id:'no',label:'No'}\n                      ],\n                      as:'option'\n                    }\">\n                    <div class=\"radio-common\"\n                      data-bind=\"css:{'selected':vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}()===option.id}\">\n                      <input type=\"radio\" name=\"${newAllQuestionKeyCombinationArray[num - 1]}\" data-bind=\"\n                          checkedValue: option.id,\n                          checked: vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}, \n                          attr:{\n                            id:'${newAllQuestionKeyCombinationArray[num - 1]}'+'-'+option.id,disabled:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]}')\n                          }\" />\n                      <label\n                        data-bind=\"text:option.label, attr:{for:'${newAllQuestionKeyCombinationArray[num - 1]}'+'-'+option.id}\"></label>\n                    </div>\n                  </div>\n                  <div class=\"col-9 ors-form-control textarea-input\" data-fieldtype=\"textarea\">\n                    <textarea class=\"textarea-text\" name=\"${newAllQuestionKeyCombinationArray[num - 1]}_remarks\"\n                      placeholder=\"Remarks by Auditor\" style=\"height: 30px;\"\n                      data-bind=\"expandable:{min:1},value:vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}_remarks,attr:{readonly:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]}_remarks')}\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n             `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [structureHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_c2 = StructureCreator;\nfunction Formbuild() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LIST OF KEYS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), questionsArray.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-grey mb-8 p-10\",\n        children: /*#__PURE__*/_jsxDEV(StructureCreator, {\n          num: item.num,\n          serialNo: item.serialNo,\n          question: item.question,\n          keyCreator: keyCreator\n        }, item.num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LIST OF KEYS FOR JAVASCRIPT FILE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-grey p-10\",\n      children: /*#__PURE__*/_jsxDEV(JsListCreator, {\n        array: newAllQuestionKeyCombinationArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LIST OF KEYS FOR OUTPUT REPORT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-grey p-10\",\n      children: /*#__PURE__*/_jsxDEV(KeyListCreator, {\n        array: newAllQuestionKeyCombinationArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Formbuild;\nexport default Formbuild;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"KeyListCreator\");\n$RefreshReg$(_c2, \"StructureCreator\");\n$RefreshReg$(_c3, \"Formbuild\");","map":{"version":3,"names":["React","questionsArray","JsListCreator","newAllQuestionKeyCombinationArray","emptyKeyArray","KeyListCreator","array","map","item","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","i","length","element1","element2","element3","key","push","toLowerCase","indexOf","randomKeyOfSingleQuestion","Math","floor","random","singleCharacterOfKey","replace","includes","anotherRandomKey","StructureCreator","num","question","serialNo","structureHTML","Formbuild"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/formbuild.js"],"sourcesContent":["import React from \"react\";\r\nimport questionsArray from \"./data\";\r\nimport JsListCreator from \"./JSListCreator\";\r\nlet newAllQuestionKeyCombinationArray = [];\r\nlet emptyKeyArray = [];\r\n\r\n\r\nfunction KeyListCreator({ array }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        {array.map((item) => (\r\n          <>{`\"${item}\",`}</>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction keyCreator(keyquestion) {\r\n  const singleQuestionKeyCombinationArray = [];\r\n  const wordsArray = keyquestion.split(\" \");\r\n  for (let i = 0; i < wordsArray.length; i++) {\r\n    const element1 = wordsArray[i];\r\n    const element2 = wordsArray[i + 1];\r\n    const element3 = wordsArray[i + 2];\r\n\r\n    const key = `${element1}_${element2}_${element3}`;\r\n\r\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\r\n    if (wordsArray.indexOf(element3) === wordsArray.length - 1) break;\r\n  }\r\n\r\n  var randomKeyOfSingleQuestion =\r\n    singleQuestionKeyCombinationArray[\r\n      Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n    ];\r\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\r\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\r\n    if (\r\n      singleCharacterOfKey === \"?\" ||\r\n      singleCharacterOfKey === \":\" ||\r\n      singleCharacterOfKey === \",\" ||\r\n      singleCharacterOfKey === \"(\" ||\r\n      singleCharacterOfKey === \")\" ||\r\n      singleCharacterOfKey === \".\" ||\r\n      singleCharacterOfKey === \"/\" ||\r\n      singleCharacterOfKey === \"’\" ||\r\n      singleCharacterOfKey === \"-\"\r\n    ) {\r\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(\r\n        singleCharacterOfKey,\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\r\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\r\n  } else {\r\n    var anotherRandomKey =\r\n      singleQuestionKeyCombinationArray[\r\n        Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n      ];\r\n    for (let i = 0; i < anotherRandomKey.length; i++) {\r\n      const singleCharacterOfKey = anotherRandomKey[i];\r\n      if (\r\n        singleCharacterOfKey === \"?\" ||\r\n        singleCharacterOfKey === \":\" ||\r\n        singleCharacterOfKey === \",\" ||\r\n        singleCharacterOfKey === \"(\" ||\r\n        singleCharacterOfKey === \")\" ||\r\n        singleCharacterOfKey === \"/\" ||\r\n        singleCharacterOfKey === \"’\" ||\r\n        singleCharacterOfKey === \"-\" ||\r\n        singleCharacterOfKey === \".\"\r\n      ) {\r\n        anotherRandomKey = anotherRandomKey.replace(singleCharacterOfKey, \"\");\r\n      }\r\n    }\r\n    newAllQuestionKeyCombinationArray.push(anotherRandomKey);\r\n  }\r\n}\r\n\r\nfunction StructureCreator({ num, question, keyCreator, serialNo }) {\r\n  keyCreator(question);\r\n\r\n  const structureHTML = `\r\n  <div class=\"section\">\r\n            <div class=\"rows\">\r\n              <div class=\"col-1 text-center\">\r\n                <p class=\"num-label\">${serialNo}</p>\r\n              </div>\r\n              <div class=\"col-11\">\r\n                <label class=\"ors-form-label\">${question}</label>\r\n                <div class=\"rows\">\r\n                  <div class=\"col-3 main-radio\" data-fieldtype=\"radio-group\" data-bind=\"foreach:{\r\n                      data:[\r\n                        {id:'yes',label:'Yes'},\r\n                        {id:'no',label:'No'}\r\n                      ],\r\n                      as:'option'\r\n                    }\">\r\n                    <div class=\"radio-common\"\r\n                      data-bind=\"css:{'selected':vm.formData.${\r\n                        newAllQuestionKeyCombinationArray[num - 1]\r\n                      }()===option.id}\">\r\n                      <input type=\"radio\" name=\"${\r\n                        newAllQuestionKeyCombinationArray[num - 1]\r\n                      }\" data-bind=\"\r\n                          checkedValue: option.id,\r\n                          checked: vm.formData.${\r\n                            newAllQuestionKeyCombinationArray[num - 1]\r\n                          }, \r\n                          attr:{\r\n                            id:'${\r\n                              newAllQuestionKeyCombinationArray[num - 1]\r\n                            }'+'-'+option.id,disabled:vm.isReadOnlyField('${\r\n    newAllQuestionKeyCombinationArray[num - 1]\r\n  }')\r\n                          }\" />\r\n                      <label\r\n                        data-bind=\"text:option.label, attr:{for:'${\r\n                          newAllQuestionKeyCombinationArray[num - 1]\r\n                        }'+'-'+option.id}\"></label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-9 ors-form-control textarea-input\" data-fieldtype=\"textarea\">\r\n                    <textarea class=\"textarea-text\" name=\"${\r\n                      newAllQuestionKeyCombinationArray[num - 1]\r\n                    }_remarks\"\r\n                      placeholder=\"Remarks by Auditor\" style=\"height: 30px;\"\r\n                      data-bind=\"expandable:{min:1},value:vm.formData.${\r\n                        newAllQuestionKeyCombinationArray[num - 1]\r\n                      }_remarks,attr:{readonly:vm.isReadOnlyField('${\r\n    newAllQuestionKeyCombinationArray[num - 1]\r\n  }_remarks')}\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n             `;\r\n  return (\r\n    <>\r\n      {structureHTML} <br />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Formbuild() {\r\n  return (\r\n    <div>\r\n      <div>LIST OF KEYS</div>\r\n\r\n      {questionsArray.map((item) => (\r\n        <>\r\n          <div className=\"border-grey mb-8 p-10\">\r\n            <StructureCreator\r\n              key={item.num}\r\n              num={item.num}\r\n              serialNo={item.serialNo}\r\n              question={item.question}\r\n              keyCreator={keyCreator}\r\n            />\r\n          </div>\r\n        </>\r\n      ))}\r\n      <div>LIST OF KEYS FOR JAVASCRIPT FILE</div>\r\n      <div className=\"border-grey p-10\">\r\n        <JsListCreator array={newAllQuestionKeyCombinationArray} />\r\n      </div>\r\n      <div>LIST OF KEYS FOR OUTPUT REPORT</div>\r\n      <div className=\"border-grey p-10\">\r\n        <KeyListCreator array={newAllQuestionKeyCombinationArray} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formbuild;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}