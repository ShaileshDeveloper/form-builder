{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive\\\\Documents\\\\GitHub\\\\form-builder\\\\form-builder\\\\src\\\\formbuild.js\";\nimport React from \"react\";\nimport questionsArray from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet newAllQuestionKeyCombinationArray = [];\nfunction keyCreator(keyquestion) {\n  const singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    for (let j = i + 1; j < wordsArray.length; j++) {\n      const firstWord = wordsArray[i];\n      const secondWord = wordsArray[j];\n      const thirdWord = `${firstWord}_${secondWord}`;\n      singleQuestionKeyCombinationArray.push(thirdWord.toLowerCase());\n    }\n  }\n  newAllQuestionKeyCombinationArray.push(singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)]);\n}\nfunction StructureCreator(_ref) {\n  let {\n    num,\n    question,\n    keyCreator\n  } = _ref;\n  keyCreator(question);\n  const structureHTML = `\n        <div class=\"row-container page-break\">\n        <div class=\"row-fix\">\n            <div class=\"column w-5 align-center\">\n                <span class=\"font-style\"> ${num} </span>\n            </div>\n            <div class=\"column w-45 align-left\">\n                <p>\n                    ${question}\n                </p>\n            </div>\n            <div class=\"column w-2-5 align-center\">\n                <span class=\"value_text\">\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_yes\"}\n                </span>\n            </div>\n            <div class=\"column w-2-5 align-center\">\n                <span class=\"value_text\">\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_no\"}\n                </span>\n            </div>\n            <div class=\"column w-7 align-center\">\n                <span class=\"font-style\">\n                    A 1.4.6\n                </span>\n            </div>\n            <div class=\"column w-38 align-left\">\n                <span class=\"font-style\">\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_remarks\"}\n                </span>\n            </div>\n        </div>\n    </div>\n            `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [structureHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_c = StructureCreator;\nfunction Formbuild() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questionsArray.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StructureCreator, {\n        num: item.num,\n        question: item.question,\n        keyCreator: keyCreator\n      }, item.num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Formbuild;\nexport default Formbuild;\nvar _c, _c2;\n$RefreshReg$(_c, \"StructureCreator\");\n$RefreshReg$(_c2, \"Formbuild\");","map":{"version":3,"names":["React","questionsArray","newAllQuestionKeyCombinationArray","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","i","length","j","firstWord","secondWord","thirdWord","push","toLowerCase","Math","floor","random","StructureCreator","num","question","structureHTML","Formbuild","map","item"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/formbuild.js"],"sourcesContent":["import React from \"react\";\r\nimport questionsArray from \"./data\";\r\nlet newAllQuestionKeyCombinationArray = [];\r\n\r\n\r\nfunction keyCreator(keyquestion) {\r\n  const singleQuestionKeyCombinationArray = [];\r\n  const wordsArray = keyquestion.split(\" \");\r\n  for (let i = 0; i < wordsArray.length; i++) {\r\n    for (let j = i + 1; j < wordsArray.length; j++) {\r\n      const firstWord = wordsArray[i];\r\n      const secondWord = wordsArray[j];\r\n      const thirdWord = `${firstWord}_${secondWord}`;\r\n      singleQuestionKeyCombinationArray.push(thirdWord.toLowerCase());\r\n    }\r\n  }\r\n\r\n  newAllQuestionKeyCombinationArray.push(\r\n    singleQuestionKeyCombinationArray[\r\n      Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n    ]\r\n  );\r\n}\r\nfunction StructureCreator({ num, question, keyCreator }) {\r\n  keyCreator(question);\r\n\r\n  const structureHTML = `\r\n        <div class=\"row-container page-break\">\r\n        <div class=\"row-fix\">\r\n            <div class=\"column w-5 align-center\">\r\n                <span class=\"font-style\"> ${num} </span>\r\n            </div>\r\n            <div class=\"column w-45 align-left\">\r\n                <p>\r\n                    ${question}\r\n                </p>\r\n            </div>\r\n            <div class=\"column w-2-5 align-center\">\r\n                <span class=\"value_text\">\r\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_yes\"}\r\n                </span>\r\n            </div>\r\n            <div class=\"column w-2-5 align-center\">\r\n                <span class=\"value_text\">\r\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_no\"}\r\n                </span>\r\n            </div>\r\n            <div class=\"column w-7 align-center\">\r\n                <span class=\"font-style\">\r\n                    A 1.4.6\r\n                </span>\r\n            </div>\r\n            <div class=\"column w-38 align-left\">\r\n                <span class=\"font-style\">\r\n                    ::${newAllQuestionKeyCombinationArray[num - 1] + \"_remarks\"}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n            `;\r\n  return (\r\n    <>\r\n      {structureHTML} <br />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Formbuild() {\r\n  return (\r\n    <div>\r\n      {questionsArray.map((item) => (\r\n        <>\r\n          <StructureCreator\r\n            key={item.num}\r\n            num={item.num}\r\n            question={item.question}\r\n            keyCreator={keyCreator}\r\n          />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formbuild;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,QAAQ;AAAC;AAAA;AACpC,IAAIC,iCAAiC,GAAG,EAAE;AAG1C,SAASC,UAAU,CAACC,WAAW,EAAE;EAC/B,MAAMC,iCAAiC,GAAG,EAAE;EAC5C,MAAMC,UAAU,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,KAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGJ,UAAU,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC9C,MAAMC,SAAS,GAAGL,UAAU,CAACE,CAAC,CAAC;MAC/B,MAAMI,UAAU,GAAGN,UAAU,CAACI,CAAC,CAAC;MAChC,MAAMG,SAAS,GAAI,GAAEF,SAAU,IAAGC,UAAW,EAAC;MAC9CP,iCAAiC,CAACS,IAAI,CAACD,SAAS,CAACE,WAAW,EAAE,CAAC;IACjE;EACF;EAEAb,iCAAiC,CAACY,IAAI,CACpCT,iCAAiC,CAC/BW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGb,iCAAiC,CAACI,MAAM,CAAC,CACrE,CACF;AACH;AACA,SAASU,gBAAgB,OAAgC;EAAA,IAA/B;IAAEC,GAAG;IAAEC,QAAQ;IAAElB;EAAW,CAAC;EACrDA,UAAU,CAACkB,QAAQ,CAAC;EAEpB,MAAMC,aAAa,GAAI;AACzB;AACA;AACA;AACA,4CAA4CF,GAAI;AAChD;AACA;AACA;AACA,sBAAsBC,QAAS;AAC/B;AACA;AACA;AACA;AACA,wBAAwBnB,iCAAiC,CAACkB,GAAG,GAAG,CAAC,CAAC,GAAG,MAAO;AAC5E;AACA;AACA;AACA;AACA,wBAAwBlB,iCAAiC,CAACkB,GAAG,GAAG,CAAC,CAAC,GAAG,KAAM;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBlB,iCAAiC,CAACkB,GAAG,GAAG,CAAC,CAAC,GAAG,UAAW;AAChF;AACA;AACA;AACA;AACA,aAAa;EACX,oBACE;IAAA,WACGE,aAAa,EAAC,GAAC;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA,gBACrB;AAEP;AAAC,KA1CQH,gBAAgB;AA4CzB,SAASI,SAAS,GAAG;EACnB,oBACE;IAAA,UACGtB,cAAc,CAACuB,GAAG,CAAEC,IAAI,iBACvB;MAAA,uBACE,QAAC,gBAAgB;QAEf,GAAG,EAAEA,IAAI,CAACL,GAAI;QACd,QAAQ,EAAEK,IAAI,CAACJ,QAAS;QACxB,UAAU,EAAElB;MAAW,GAHlBsB,IAAI,CAACL,GAAG;QAAA;QAAA;QAAA;MAAA;IAIb,iBAEL;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,MAfQG,SAAS;AAiBlB,eAAeA,SAAS;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}