{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive\\\\Documents\\\\GitHub\\\\form-builder\\\\form-builder\\\\src\\\\formbuild.js\";\nimport React from 'react';\nimport { Combination } from \"js-combinatorics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [{\n  num: \"1\",\n  question: \"whats you name my friend\",\n  answer: \"shailesh\"\n}, {\n  num: \"2\",\n  question: \"whats you game\",\n  answer: \"volleyball\"\n}];\nfunction keyCreator(keyquestion) {\n  const singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    for (let j = i + 1; j < wordsArray.length; j++) {\n      const firstWord = wordsArray[i];\n      const secondWord = wordsArray[j];\n      const thirdWord = `${firstWord}_${secondWord}`;\n      singleQuestionKeyCombinationArray.push(thirdWord);\n    }\n  }\n  return singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n}\nfunction Formbuild() {\n  function StructureCreator(_ref) {\n    let {\n      num,\n      question,\n      answer\n    } = _ref;\n    const structure = `\n        <label key=${keyCreator(question)}>${num}</label>\n        <li>${question}</li>\n        <li>${answer}</li>\n        `;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [structure, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: array.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StructureCreator, {\n        num: item.num,\n        question: item.question,\n        answer: item.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = Formbuild;\nexport default Formbuild;\nvar _c;\n$RefreshReg$(_c, \"Formbuild\");","map":{"version":3,"names":["React","Combination","array","num","question","answer","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","i","length","j","firstWord","secondWord","thirdWord","push","Math","floor","random","Formbuild","StructureCreator","structure","map","item"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/formbuild.js"],"sourcesContent":["import React from 'react'\r\nimport {Combination} from \"js-combinatorics\"\r\nlet array = [\r\n    {\r\n        num: \"1\",\r\n        question:\"whats you name my friend\",\r\n        answer:\"shailesh\"\r\n    },\r\n    {\r\n        num: \"2\",\r\n        question:\"whats you game\",\r\n        answer:\"volleyball\"\r\n    },\r\n]\r\n\r\n\r\nfunction keyCreator(keyquestion){\r\n    const singleQuestionKeyCombinationArray = []\r\n    const wordsArray = keyquestion.split(\" \")\r\n    for (let i = 0; i < wordsArray.length; i++) {\r\n        for (let j = i+1; j < wordsArray.length; j++) {\r\n            const firstWord = wordsArray[i];\r\n            const secondWord = wordsArray[j]\r\n            const thirdWord = `${firstWord}_${secondWord}`\r\n            singleQuestionKeyCombinationArray.push(thirdWord)\r\n        }\r\n    }\r\n    return singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)] \r\n}\r\n\r\nfunction Formbuild() {\r\n    function StructureCreator({num , question,answer}){\r\n        \r\n        const structure = `\r\n        <label key=${keyCreator(question)}>${num}</label>\r\n        <li>${question}</li>\r\n        <li>${answer}</li>\r\n        `\r\n        return <>\r\n         {structure} <br />\r\n        </>\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        {array.map(item => <>\r\n            <StructureCreator  num={item.num} question={item.question} answer={item.answer}/>\r\n        </>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formbuild\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAAA;AAAA;AAC5C,IAAIC,KAAK,GAAG,CACR;EACIC,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAC,0BAA0B;EACnCC,MAAM,EAAC;AACX,CAAC,EACD;EACIF,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAC,gBAAgB;EACzBC,MAAM,EAAC;AACX,CAAC,CACJ;AAGD,SAASC,UAAU,CAACC,WAAW,EAAC;EAC5B,MAAMC,iCAAiC,GAAG,EAAE;EAC5C,MAAMC,UAAU,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,KAAK,IAAIE,CAAC,GAAGF,CAAC,GAAC,CAAC,EAAEE,CAAC,GAAGJ,UAAU,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC1C,MAAMC,SAAS,GAAGL,UAAU,CAACE,CAAC,CAAC;MAC/B,MAAMI,UAAU,GAAGN,UAAU,CAACI,CAAC,CAAC;MAChC,MAAMG,SAAS,GAAI,GAAEF,SAAU,IAAGC,UAAW,EAAC;MAC9CP,iCAAiC,CAACS,IAAI,CAACD,SAAS,CAAC;IACrD;EACJ;EACA,OAAOR,iCAAiC,CAACU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGZ,iCAAiC,CAACI,MAAM,CAAC,CAAC;AAClH;AAEA,SAASS,SAAS,GAAG;EACjB,SAASC,gBAAgB,OAAyB;IAAA,IAAxB;MAACnB,GAAG;MAAGC,QAAQ;MAACC;IAAM,CAAC;IAE7C,MAAMkB,SAAS,GAAI;AAC3B,qBAAqBjB,UAAU,CAACF,QAAQ,CAAE,IAAGD,GAAI;AACjD,cAAcC,QAAS;AACvB,cAAcC,MAAO;AACrB,SAAS;IACD,oBAAO;MAAA,WACLkB,SAAS,EAAC,GAAC;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,gBAChB;EACP;EAEF,oBACE;IAAA,UACKrB,KAAK,CAACsB,GAAG,CAACC,IAAI,iBAAI;MAAA,uBACf,QAAC,gBAAgB;QAAE,GAAG,EAAEA,IAAI,CAACtB,GAAI;QAAC,QAAQ,EAAEsB,IAAI,CAACrB,QAAS;QAAC,MAAM,EAAEqB,IAAI,CAACpB;MAAO;QAAA;QAAA;QAAA;MAAA;IAAE,iBAClF;EAAC;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KApBQgB,SAAS;AAsBlB,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}