{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive\\\\Documents\\\\GitHub\\\\form-builder\\\\form-builder\\\\src\\\\formbuild.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet array = [{\n  num: \"1\",\n  question: \"Is the SRPS licensed/certified for the operation of Recruitment and Placement services (Stating the SRPS meets the requirements of National laws and Regulations)\"\n}, {\n  num: \"2\",\n  question: \"Himan is home\"\n}];\nlet newAllQuestionKeyCombinationArray = [];\nfunction keyCreator(keyquestion) {\n  const singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    for (let j = i + 1; j < wordsArray.length; j++) {\n      const firstWord = wordsArray[i];\n      const secondWord = wordsArray[j];\n      const thirdWord = `${firstWord}_${secondWord}`;\n      singleQuestionKeyCombinationArray.push(thirdWord);\n    }\n  }\n  newAllQuestionKeyCombinationArray.push(singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)]);\n}\nfunction Formbuild() {\n  function StructureCreator(_ref) {\n    let {\n      num,\n      question\n    } = _ref;\n    keyCreator(question);\n    console.log(newAllQuestionKeyCombinationArray, \"a\");\n    const structure = `\n    <div class=\"row-container page-break\">\n    <div class=\"row-fix\">\n        <div class=\"column w-5 align-center\">\n            <span class=\"font-style\"> ${num} </span>\n        </div>\n        <div class=\"column w-45 align-left\">\n            <p>\n                ${question}\n            </p>\n        </div>\n        <div class=\"column w-2-5 align-center\">\n            <span class=\"value_text\">\n                ::${newAllQuestionKeyCombinationArray[num - 1] + \"_yes\"}\n            </span>\n        </div>\n        <div class=\"column w-2-5 align-center\">\n            <span class=\"value_text\">\n                ::${newAllQuestionKeyCombinationArray[num - 1] + \"_no\"}\n            </span>\n        </div>\n        <div class=\"column w-7 align-center\">\n            <span class=\"font-style\">\n                A 1.4.6\n            </span>\n        </div>\n        <div class=\"column w-38 align-left\">\n            <span class=\"font-style\">\n                ::${newAllQuestionKeyCombinationArray[num - 1] + \"_remarks\"}\n            </span>\n        </div>\n    </div>\n</div>\n        `;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [structure, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: array.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StructureCreator, {\n        num: item.num,\n        question: item.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c = Formbuild;\nexport default Formbuild;\nvar _c;\n$RefreshReg$(_c, \"Formbuild\");","map":{"version":3,"names":["React","array","num","question","newAllQuestionKeyCombinationArray","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","i","length","j","firstWord","secondWord","thirdWord","push","Math","floor","random","Formbuild","StructureCreator","console","log","structure","map","item"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/formbuild.js"],"sourcesContent":["import React from \"react\";\r\nlet array = [\r\n  {\r\n    num: \"1\",\r\n    question: \"Is the SRPS licensed/certified for the operation of Recruitment and Placement services (Stating the SRPS meets the requirements of National laws and Regulations)\",\r\n  },\r\n  {\r\n    num: \"2\",\r\n    question: \"Himan is home\",\r\n  },\r\n];\r\nlet newAllQuestionKeyCombinationArray = [\r\n]\r\n\r\nfunction keyCreator(keyquestion) {\r\n  const singleQuestionKeyCombinationArray = [];\r\n  const wordsArray = keyquestion.split(\" \");\r\n  for (let i = 0; i < wordsArray.length; i++) {\r\n    for (let j = i + 1; j < wordsArray.length; j++) {\r\n      const firstWord = wordsArray[i];\r\n      const secondWord = wordsArray[j];\r\n      const thirdWord = `${firstWord}_${secondWord}`;\r\n      singleQuestionKeyCombinationArray.push(thirdWord);\r\n    }\r\n  }\r\n  newAllQuestionKeyCombinationArray.push(\r\n    singleQuestionKeyCombinationArray[\r\n        Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n      ]\r\n  )\r\n}\r\n\r\nfunction Formbuild() {\r\n  function StructureCreator({ num, question }) {\r\n    keyCreator(question)\r\n    console.log(newAllQuestionKeyCombinationArray,\"a\")\r\n    const structure = `\r\n    <div class=\"row-container page-break\">\r\n    <div class=\"row-fix\">\r\n        <div class=\"column w-5 align-center\">\r\n            <span class=\"font-style\"> ${num} </span>\r\n        </div>\r\n        <div class=\"column w-45 align-left\">\r\n            <p>\r\n                ${question}\r\n            </p>\r\n        </div>\r\n        <div class=\"column w-2-5 align-center\">\r\n            <span class=\"value_text\">\r\n                ::${newAllQuestionKeyCombinationArray[num-1] + \"_yes\"}\r\n            </span>\r\n        </div>\r\n        <div class=\"column w-2-5 align-center\">\r\n            <span class=\"value_text\">\r\n                ::${newAllQuestionKeyCombinationArray[num-1] + \"_no\"}\r\n            </span>\r\n        </div>\r\n        <div class=\"column w-7 align-center\">\r\n            <span class=\"font-style\">\r\n                A 1.4.6\r\n            </span>\r\n        </div>\r\n        <div class=\"column w-38 align-left\">\r\n            <span class=\"font-style\">\r\n                ::${newAllQuestionKeyCombinationArray[num-1] + \"_remarks\"}\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n        `;\r\n\r\n    return (\r\n      <>\r\n        {structure} <br />\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {array.map((item) => (\r\n        <>\r\n          <StructureCreator\r\n            num={item.num}\r\n            question={item.question}\r\n          />\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formbuild;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAC1B,IAAIC,KAAK,GAAG,CACV;EACEC,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE;AACZ,CAAC,CACF;AACD,IAAIC,iCAAiC,GAAG,EACvC;AAED,SAASC,UAAU,CAACC,WAAW,EAAE;EAC/B,MAAMC,iCAAiC,GAAG,EAAE;EAC5C,MAAMC,UAAU,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;EACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,KAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAEE,CAAC,GAAGJ,UAAU,CAACG,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC9C,MAAMC,SAAS,GAAGL,UAAU,CAACE,CAAC,CAAC;MAC/B,MAAMI,UAAU,GAAGN,UAAU,CAACI,CAAC,CAAC;MAChC,MAAMG,SAAS,GAAI,GAAEF,SAAU,IAAGC,UAAW,EAAC;MAC9CP,iCAAiC,CAACS,IAAI,CAACD,SAAS,CAAC;IACnD;EACF;EACAX,iCAAiC,CAACY,IAAI,CACpCT,iCAAiC,CAC7BU,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGZ,iCAAiC,CAACI,MAAM,CAAC,CACrE,CACJ;AACH;AAEA,SAASS,SAAS,GAAG;EACnB,SAASC,gBAAgB,OAAoB;IAAA,IAAnB;MAAEnB,GAAG;MAAEC;IAAS,CAAC;IACzCE,UAAU,CAACF,QAAQ,CAAC;IACpBmB,OAAO,CAACC,GAAG,CAACnB,iCAAiC,EAAC,GAAG,CAAC;IAClD,MAAMoB,SAAS,GAAI;AACvB;AACA;AACA;AACA,wCAAwCtB,GAAI;AAC5C;AACA;AACA;AACA,kBAAkBC,QAAS;AAC3B;AACA;AACA;AACA;AACA,oBAAoBC,iCAAiC,CAACF,GAAG,GAAC,CAAC,CAAC,GAAG,MAAO;AACtE;AACA;AACA;AACA;AACA,oBAAoBE,iCAAiC,CAACF,GAAG,GAAC,CAAC,CAAC,GAAG,KAAM;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBE,iCAAiC,CAACF,GAAG,GAAC,CAAC,CAAC,GAAG,UAAW;AAC1E;AACA;AACA;AACA;AACA,SAAS;IAEL,oBACE;MAAA,WACGsB,SAAS,EAAC,GAAC;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,gBACjB;EAEP;EAGA,oBACE;IAAA,UACGvB,KAAK,CAACwB,GAAG,CAAEC,IAAI,iBACd;MAAA,uBACE,QAAC,gBAAgB;QACf,GAAG,EAAEA,IAAI,CAACxB,GAAI;QACd,QAAQ,EAAEwB,IAAI,CAACvB;MAAS;QAAA;QAAA;QAAA;MAAA;IACxB,iBAEL;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,KA3DQiB,SAAS;AA6DlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}