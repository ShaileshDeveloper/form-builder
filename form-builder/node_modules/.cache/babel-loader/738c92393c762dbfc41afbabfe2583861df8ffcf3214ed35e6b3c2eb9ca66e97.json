{"ast":null,"code":"export let newAllQuestionKeyCombinationArray = [];\nconst nonKeyWords = [\"as\", \"and\", \"does\", \"all\", \"up\", \"that\", \"been\", \"this\", \"the\", \"of\", \"from\", \"be\", \"is\", \"any\", \"to\", \"what\", \"your\"];\nfunction findNounsInString(str) {\n  const nounRegex = /^[A-Za-z]+(s|es)?$/;\n  const nouns = [];\n  console.log(nounRegex, \"nounRegex\");\n  const words = str.split(' ');\n  console.log(words, \"xsxs\");\n  words.forEach(word => {\n    if (nounRegex.test(word)) {\n      nouns.push(word);\n    }\n  });\n  return nouns;\n}\nfunction keyCreator(keyquestion) {\n  let singleQuestionKeyCombinationArray = [];\n  let nounsPresentInString = findNounsInString(keyquestion);\n  for (let i = 0; i < nounsPresentInString.length; i++) {\n    const element1 = nounsPresentInString[i];\n    const element2 = nounsPresentInString[i + 1];\n    const key = `${element1}_${element2}`;\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\n    if (nounsPresentInString.indexOf(element2) === nounsPresentInString.length - 1) break;\n  }\n  console.log(singleQuestionKeyCombinationArray, \"singlll\");\n  var randomKeyOfSingleQuestion = singleQuestionKeyCombinationArray.length === 0 ? \"enter_your_key\" : singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\n    if (singleCharacterOfKey === \"?\" || singleCharacterOfKey === \":\" || singleCharacterOfKey === \",\" || singleCharacterOfKey === \"(\" || singleCharacterOfKey === \")\" || singleCharacterOfKey === \".\" || singleCharacterOfKey === \"/\" || singleCharacterOfKey === \"’\" || singleCharacterOfKey === \"-\") {\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(singleCharacterOfKey, \"\");\n    }\n  }\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\n  } else {\n    newAllQuestionKeyCombinationArray.push(singleQuestionKeyCombinationArray.length === 0 ? \"Enter_your_key\" : `${randomKeyOfSingleQuestion}_1`);\n  }\n}\nexport default keyCreator;","map":{"version":3,"names":["newAllQuestionKeyCombinationArray","nonKeyWords","findNounsInString","str","nounRegex","nouns","console","log","words","split","forEach","word","test","push","keyCreator","keyquestion","singleQuestionKeyCombinationArray","nounsPresentInString","i","length","element1","element2","key","toLowerCase","indexOf","randomKeyOfSingleQuestion","Math","floor","random","singleCharacterOfKey","replace","includes"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/keyCreator.js"],"sourcesContent":["export let newAllQuestionKeyCombinationArray = [];\r\nconst nonKeyWords = [\r\n  \"as\",\r\n  \"and\",\r\n  \"does\",\r\n  \"all\",\r\n  \"up\",\r\n  \"that\",\r\n  \"been\",\r\n  \"this\",\r\n  \"the\",\r\n  \"of\",\r\n  \"from\",\r\n  \"be\",\r\n  \"is\",\r\n  \"any\",\r\n  \"to\",\r\n  \"what\",\r\n  \"your\"\r\n];\r\nfunction findNounsInString(str) {\r\n  const nounRegex = /^[A-Za-z]+(s|es)?$/; \r\n  const nouns = [];\r\n  console.log(nounRegex,\"nounRegex\")\r\n\r\n  const words = str.split(' ');\r\n  console.log(words,\"xsxs\")\r\n  words.forEach(word => {\r\n    if (nounRegex.test(word)) {\r\n      nouns.push(word);\r\n    }\r\n  });\r\n\r\n  return nouns;\r\n}\r\nfunction keyCreator(keyquestion) {\r\n  let singleQuestionKeyCombinationArray = [];\r\n  let nounsPresentInString =  findNounsInString(keyquestion)\r\n  for (let i = 0; i < nounsPresentInString.length; i++) {\r\n    const element1 = nounsPresentInString[i];\r\n    const element2 = nounsPresentInString[i + 1];\r\n    const key = `${element1}_${element2}`;\r\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\r\n    if (nounsPresentInString.indexOf(element2) === nounsPresentInString.length - 1) break;\r\n  }\r\n\r\n console.log(singleQuestionKeyCombinationArray,\"singlll\")\r\n\r\n  var randomKeyOfSingleQuestion =\r\n    singleQuestionKeyCombinationArray.length === 0\r\n      ? \"enter_your_key\"\r\n      : singleQuestionKeyCombinationArray[\r\n          Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n        ];\r\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\r\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\r\n    if (\r\n      singleCharacterOfKey === \"?\" ||\r\n      singleCharacterOfKey === \":\" ||\r\n      singleCharacterOfKey === \",\" ||\r\n      singleCharacterOfKey === \"(\" ||\r\n      singleCharacterOfKey === \")\" ||\r\n      singleCharacterOfKey === \".\" ||\r\n      singleCharacterOfKey === \"/\" ||\r\n      singleCharacterOfKey === \"’\" ||\r\n      singleCharacterOfKey === \"-\"\r\n    ) {\r\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(\r\n        singleCharacterOfKey,\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\r\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\r\n  } else {\r\n    newAllQuestionKeyCombinationArray.push(\r\n      singleQuestionKeyCombinationArray.length === 0\r\n        ? \"Enter_your_key\"\r\n        : `${randomKeyOfSingleQuestion}_1`\r\n    );\r\n  }\r\n}\r\n\r\nexport default keyCreator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}