{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shail\\\\OneDrive\\\\Documents\\\\GitHub\\\\form-builder\\\\form-builder\\\\src\\\\formbuild.js\";\nimport React from \"react\";\nimport questionsArray from \"./data\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet newAllQuestionKeyCombinationArray = [];\nfunction JsListCreator(_ref) {\n  let {\n    array\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: array.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: `\"${item}\": \"\" , \"${item}_remarks\":\"\",`\n    }, void 0, false))\n  }, void 0, false);\n}\n_c = JsListCreator;\nfunction specialCharactersRemover(array) {\n  for (let index = 0; index < array.length; index++) {\n    console.log(newAllQuestionKeyCombinationArray);\n    const element = array[index];\n    for (let i = 0; i < element.length; i++) {\n      const element1 = element[i];\n      if (element1 === \"?\" || element1 === \":\" || element1 === \",\" || element1 === \"(\" || element1 === \")\") {\n        element.replace(element1, \"\");\n      }\n    }\n  }\n  console.log(newAllQuestionKeyCombinationArray, \"xskjxnjsnaaaaaaaaaaaaaaaaaaaaaaaaa\");\n}\nfunction keyCreator(keyquestion) {\n  const singleQuestionKeyCombinationArray = [];\n  const wordsArray = keyquestion.split(\" \");\n  for (let i = 0; i < wordsArray.length; i++) {\n    const element1 = wordsArray[i];\n    const element2 = wordsArray[i + 1];\n    const element3 = wordsArray[i + 2];\n    const key = `${element1}_${element2}_${element3}`;\n    for (let index = 0; index < key.length; index++) {\n      const element = key[index];\n    }\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\n    if (wordsArray.indexOf(element3) === wordsArray.length - 1) break;\n  }\n  const randomKeyOfSingleQuestion = singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\n  } else {\n    const anotherRandomKey = singleQuestionKeyCombinationArray[Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)];\n    newAllQuestionKeyCombinationArray.push(anotherRandomKey);\n  }\n  specialCharactersRemover(newAllQuestionKeyCombinationArray);\n  console.log(newAllQuestionKeyCombinationArray, \"xcnsknck\");\n}\nfunction StructureCreator(_ref2) {\n  let {\n    num,\n    question,\n    keyCreator,\n    serialNo\n  } = _ref2;\n  keyCreator(question);\n  const structureHTML = `\n  <div class=\"section\">\n            <div class=\"rows\">\n              <div class=\"col-1 text-center\">\n                <p class=\"num-label\">${serialNo}</p>\n              </div>\n              <div class=\"col-11\">\n                <label class=\"ors-form-label\">${question}</label>\n                <div class=\"rows\">\n                  <div class=\"col-3 main-radio\" data-fieldtype=\"radio-group\" data-bind=\"foreach:{\n                      data:[\n                        {id:'yes',label:'Yes'},\n                        {id:'no',label:'No'}\n                      ],\n                      as:'option'\n                    }\">\n                    <div class=\"radio-common\"\n                      data-bind=\"css:{'selected':vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}()===option.id}\">\n                      <input type=\"radio\" name=\"${newAllQuestionKeyCombinationArray[num - 1]}\" data-bind=\"\n                          checkedValue: option.id,\n                          checked: vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}, \n                          attr:{\n                            id:'${newAllQuestionKeyCombinationArray[num - 1]}'+'-'+option.id,disabled:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]}')\n                          }\" />\n                      <label\n                        data-bind=\"text:option.label, attr:{for:'${newAllQuestionKeyCombinationArray[num - 1]}'+'-'+option.id}\"></label>\n                    </div>\n                  </div>\n                  <div class=\"col-9 ors-form-control textarea-input\" data-fieldtype=\"textarea\">\n                    <textarea class=\"textarea-text\" name=\"${newAllQuestionKeyCombinationArray[num - 1]}_remarks\"\n                      placeholder=\"Remarks by Auditor\" style=\"height: 30px;\"\n                      data-bind=\"expandable:{min:1},value:vm.formData.${newAllQuestionKeyCombinationArray[num - 1]}_remarks,attr:{readonly:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]}_remarks')}\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n             `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [structureHTML, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_c2 = StructureCreator;\nfunction Formbuild() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [questionsArray.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-grey mb-8 p-10\",\n        children: /*#__PURE__*/_jsxDEV(StructureCreator, {\n          num: item.num,\n          serialNo: item.serialNo,\n          question: item.question,\n          keyCreator: keyCreator\n        }, item.num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-grey p-10\",\n      children: /*#__PURE__*/_jsxDEV(JsListCreator, {\n        array: newAllQuestionKeyCombinationArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Formbuild;\nexport default Formbuild;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"JsListCreator\");\n$RefreshReg$(_c2, \"StructureCreator\");\n$RefreshReg$(_c3, \"Formbuild\");","map":{"version":3,"names":["React","questionsArray","newAllQuestionKeyCombinationArray","JsListCreator","array","map","item","specialCharactersRemover","index","length","console","log","element","i","element1","replace","keyCreator","keyquestion","singleQuestionKeyCombinationArray","wordsArray","split","element2","element3","key","push","toLowerCase","indexOf","randomKeyOfSingleQuestion","Math","floor","random","includes","anotherRandomKey","StructureCreator","num","question","serialNo","structureHTML","Formbuild"],"sources":["C:/Users/shail/OneDrive/Documents/GitHub/form-builder/form-builder/src/formbuild.js"],"sourcesContent":["import React from \"react\";\r\nimport questionsArray from \"./data\";\r\nlet newAllQuestionKeyCombinationArray = [];\r\nfunction JsListCreator({array}){\r\n  return <>\r\n  {array.map(item => <>\r\n   {`\"${item}\": \"\" , \"${item}_remarks\":\"\",`}\r\n  </> )}\r\n  </>\r\n}\r\nfunction specialCharactersRemover(array){\r\n  for (let index = 0; index < array.length; index++) {\r\n    console.log(newAllQuestionKeyCombinationArray)\r\n    const element = array[index];\r\n    for (let i = 0; i < element.length; i++) {\r\n      const element1 = element[i];\r\n      if(element1 === \"?\" || element1 === \":\" || element1 === \",\" || element1 === \"(\" || element1 === \")\"){\r\n       element.replace(element1,\"\")\r\n\r\n      }\r\n\r\n    }\r\n\r\n   \r\n    \r\n  }\r\n  console.log(newAllQuestionKeyCombinationArray,\"xskjxnjsnaaaaaaaaaaaaaaaaaaaaaaaaa\")\r\n\r\n}\r\nfunction keyCreator(keyquestion) {\r\n  const singleQuestionKeyCombinationArray = [];\r\n  const wordsArray = keyquestion.split(\" \");\r\n  for(let i = 0; i< wordsArray.length; i++){\r\n    const element1 = wordsArray[i]\r\n    const element2 = wordsArray[i+1]\r\n    const element3 = wordsArray[i+2]\r\n    \r\n    const key = `${element1}_${element2}_${element3}`\r\n    for (let index = 0; index < key.length; index++) {\r\n      const element = key[index];\r\n      \r\n      \r\n    }\r\n    singleQuestionKeyCombinationArray.push(key.toLowerCase())\r\n    if(wordsArray.indexOf(element3) === wordsArray.length-1) break;\r\n  }\r\n \r\n\r\n  const randomKeyOfSingleQuestion = singleQuestionKeyCombinationArray[\r\n    Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n  ]\r\n\r\n  if(!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)){\r\n    newAllQuestionKeyCombinationArray.push(\r\n      randomKeyOfSingleQuestion\r\n      );\r\n  } else {\r\n    const anotherRandomKey =  singleQuestionKeyCombinationArray[\r\n      Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n    ]\r\n    newAllQuestionKeyCombinationArray.push(\r\n      anotherRandomKey\r\n    )\r\n  }\r\n  specialCharactersRemover(newAllQuestionKeyCombinationArray)\r\nconsole.log(newAllQuestionKeyCombinationArray,\"xcnsknck\")  \r\n}\r\nfunction StructureCreator({ num, question, keyCreator , serialNo }) {\r\n  keyCreator(question);\r\n\r\n  const structureHTML = `\r\n  <div class=\"section\">\r\n            <div class=\"rows\">\r\n              <div class=\"col-1 text-center\">\r\n                <p class=\"num-label\">${serialNo}</p>\r\n              </div>\r\n              <div class=\"col-11\">\r\n                <label class=\"ors-form-label\">${question}</label>\r\n                <div class=\"rows\">\r\n                  <div class=\"col-3 main-radio\" data-fieldtype=\"radio-group\" data-bind=\"foreach:{\r\n                      data:[\r\n                        {id:'yes',label:'Yes'},\r\n                        {id:'no',label:'No'}\r\n                      ],\r\n                      as:'option'\r\n                    }\">\r\n                    <div class=\"radio-common\"\r\n                      data-bind=\"css:{'selected':vm.formData.${newAllQuestionKeyCombinationArray[num-1]}()===option.id}\">\r\n                      <input type=\"radio\" name=\"${newAllQuestionKeyCombinationArray[num-1]}\" data-bind=\"\r\n                          checkedValue: option.id,\r\n                          checked: vm.formData.${newAllQuestionKeyCombinationArray[num-1]}, \r\n                          attr:{\r\n                            id:'${newAllQuestionKeyCombinationArray[num-1]}'+'-'+option.id,disabled:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num-1]}')\r\n                          }\" />\r\n                      <label\r\n                        data-bind=\"text:option.label, attr:{for:'${newAllQuestionKeyCombinationArray[num-1]}'+'-'+option.id}\"></label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-9 ors-form-control textarea-input\" data-fieldtype=\"textarea\">\r\n                    <textarea class=\"textarea-text\" name=\"${newAllQuestionKeyCombinationArray[num-1]}_remarks\"\r\n                      placeholder=\"Remarks by Auditor\" style=\"height: 30px;\"\r\n                      data-bind=\"expandable:{min:1},value:vm.formData.${newAllQuestionKeyCombinationArray[num-1]}_remarks,attr:{readonly:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num-1]}_remarks')}\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n             `;\r\n  return (\r\n    <>\r\n      {structureHTML} <br />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Formbuild() {\r\n  return (\r\n    <div>\r\n      {questionsArray.map((item) => (\r\n        <>\r\n        <div className=\"border-grey mb-8 p-10\">\r\n        <StructureCreator\r\n            key={item.num}\r\n            num={item.num}\r\n            serialNo = {item.serialNo}\r\n            question={item.question}\r\n            keyCreator={keyCreator}\r\n          />\r\n        </div>\r\n       \r\n        </>\r\n      ))}\r\n      <div className=\"border-grey p-10\">\r\n      <JsListCreator array={newAllQuestionKeyCombinationArray} />\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Formbuild;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}