[{"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\index.js":"1","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\App.js":"2","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\formbuild.js":"3","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\data.js":"4","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\dataCreator.js":"5","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\JSListCreator.js":"6","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\KeyListCreator.js":"7","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\keyCreator.js":"8","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\structureCreator.js":"9","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\footer.js":"10","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\apiListCreator.js":"11"},{"size":207,"mtime":1676868701943,"results":"12","hashOfConfig":"13"},{"size":674,"mtime":1676868701927,"results":"14","hashOfConfig":"13"},{"size":1549,"mtime":1676868701942,"results":"15","hashOfConfig":"13"},{"size":11349,"mtime":1676869639380,"results":"16","hashOfConfig":"13"},{"size":2722,"mtime":1676868701939,"results":"17","hashOfConfig":"13"},{"size":218,"mtime":1676868701928,"results":"18","hashOfConfig":"13"},{"size":230,"mtime":1676868701930,"results":"19","hashOfConfig":"13"},{"size":2601,"mtime":1676868701946,"results":"20","hashOfConfig":"13"},{"size":2623,"mtime":1676868701948,"results":"21","hashOfConfig":"13"},{"size":488,"mtime":1676868701940,"results":"22","hashOfConfig":"13"},{"size":418,"mtime":1676869639364,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"q1dymu",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\index.js",[],[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\App.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\formbuild.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\data.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\dataCreator.js",["61"],[],"import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport \"./dataCreator.css\";\r\n\r\nfunction DataCreator() {\r\n  const [questionList, setQuestionList] = useState([]);\r\n  const [serialNo, setSerialNo] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [num, setNum] = useState(1);\r\n  const [extraField, setExtraField] = useState(\"\");\r\n\r\n  function deleteQuestionFunction(id) {\r\n    questionList.pop();\r\n    const newArray = questionList.map((item) => item);\r\n    setNum((prev) => prev - 1);\r\n    setQuestionList(() => newArray);\r\n  }\r\n  return (\r\n    <div className=\"border-grey p-30 mb-20\">\r\n      <input\r\n        className=\"border-one p-3 mr-10 mb-8 br-10\"\r\n        style={{ width: \"300px\" }}\r\n        placeholder=\"Enter serial no.\"\r\n        value={serialNo}\r\n        onChange={(e) => setSerialNo(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        className=\"w-100 border-one p-3 mr-10 mb-8 br-10\"\r\n        style={{ width: \"800px\" }}\r\n        placeholder=\"Enter question\"\r\n        value={question}\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        className=\"w-100 border-one p-3 mr-10 mb-8 br-10\"\r\n        style={{ width: \"300px\" }}\r\n        placeholder=\"Enter if any extra fields or ignore this field\"\r\n        value={extraField}\r\n        onChange={(e) => setExtraField(e.target.value)}\r\n      />\r\n      <br />\r\n      <button\r\n        className=\"p-10 border-none mr-10\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          setNum((prev) => prev + 1);\r\n          setQuestionList([\r\n            ...questionList,\r\n            {\r\n              serialNo: `\"${serialNo}\"`,\r\n              question: `\"${question}\"`,\r\n              num: `\"${num}\"`,\r\n              extraField: `\"${extraField}\"`,\r\n            },\r\n          ]);\r\n          setSerialNo(\"\");\r\n          setQuestion(\"\");\r\n          setExtraField(\"\");\r\n        }}\r\n      >\r\n        Add question\r\n      </button>\r\n      <button\r\n        className=\"p-10 border-none\"\r\n        onClick={() => deleteQuestionFunction(num)}\r\n        style={{cursor:\"pointer\"}}\r\n\r\n      >\r\n        Delete question\r\n      </button>\r\n      <br />\r\n      <div className=\"mt-15\">DATA STRUCTURE IN OBJECT FORMAT</div>\r\n      <div className=\"border-grey p-30 mb-20\">\r\n        {questionList.map((item) => {\r\n          return (\r\n            <>\r\n              {` {\r\n            serialNo : ${item.serialNo} , \r\n            question :${item.question},\r\n            num :${item.num},\r\n            extraField: ${item.extraField}\r\n        },`}\r\n              <br />\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataCreator;\r\n","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\JSListCreator.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\KeyListCreator.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\keyCreator.js",["62"],[],"export let newAllQuestionKeyCombinationArray = [];\r\nconst nonKeyWords = [\r\n  \"the\",\r\n  \"as\",\r\n  \"and\",\r\n  \"does\",\r\n  \"all\",\r\n  \"up\",\r\n  \"that\",\r\n  \"been\",\r\n  \"this\",\r\n  \"the\",\r\n  \"of\",\r\n  \"from\",\r\n  \"be\",\r\n  \"is\",\r\n  \"any\",\r\n  \"to\",\r\n  \"what\",\r\n  \"your\",\r\n  \"a\",\r\n  \"for\",\r\n  \"are\",\r\n  \"or\",\r\n  \"by\",\r\n  \"have\",\r\n  \"with\",\r\n  \"not\",\r\n  \"they\",\r\n  \"per\"\r\n];\r\nfunction keyCreator(keyquestion) {\r\n  let singleQuestionKeyCombinationArray = [];\r\n  let wordsArray = keyquestion.split(\" \");\r\n  for (let index = 0; index < nonKeyWords.length; index++) {\r\n    const element = nonKeyWords[index];\r\n    wordsArray = wordsArray.filter((word, i) => {\r\n      if (word.toLowerCase() === element.toLowerCase()) {\r\n        // If the word is found, check if it is separate\r\n        if ((i === 0 || !/\\w/.test(wordsArray[i - 1])) && (i === wordsArray.length - 1 || !/\\w/.test(wordsArray[i + 1]))) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  for (let i = 0; i < wordsArray.length; i++) {\r\n    const element1 = wordsArray[i];\r\n    const element2 = wordsArray[i + 1];\r\n    const key = `${element1}_${element2}`;\r\n    singleQuestionKeyCombinationArray.push(key.toLowerCase());\r\n    if (wordsArray.indexOf(element2) === wordsArray.length - 1) break;\r\n  }\r\n\r\n  var randomKeyOfSingleQuestion =\r\n    singleQuestionKeyCombinationArray.length === 0\r\n      ? \"enter_your_key\"\r\n      : singleQuestionKeyCombinationArray[\r\n          Math.floor(Math.random() * singleQuestionKeyCombinationArray.length)\r\n        ];\r\n  for (let i = 0; i < randomKeyOfSingleQuestion.length; i++) {\r\n    const singleCharacterOfKey = randomKeyOfSingleQuestion[i];\r\n    if (\r\n      singleCharacterOfKey === \"?\" ||\r\n      singleCharacterOfKey === \":\" ||\r\n      singleCharacterOfKey === \",\" ||\r\n      singleCharacterOfKey === \"(\" ||\r\n      singleCharacterOfKey === \")\" ||\r\n      singleCharacterOfKey === \".\" ||\r\n      singleCharacterOfKey === \"/\" ||\r\n      singleCharacterOfKey === \"â€™\" ||\r\n      singleCharacterOfKey === \"-\"\r\n    ) {\r\n      randomKeyOfSingleQuestion = randomKeyOfSingleQuestion.replace(\r\n        singleCharacterOfKey,\r\n        \"\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!newAllQuestionKeyCombinationArray.includes(randomKeyOfSingleQuestion)) {\r\n    newAllQuestionKeyCombinationArray.push(randomKeyOfSingleQuestion);\r\n  } else {\r\n    newAllQuestionKeyCombinationArray.push(\r\n      singleQuestionKeyCombinationArray.length === 0\r\n        ? \"Enter_your_key\"\r\n        : `${randomKeyOfSingleQuestion}_1`\r\n    );\r\n  }\r\n}\r\n\r\nexport default keyCreator;\r\n","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\structureCreator.js",["63"],[],"import { newAllQuestionKeyCombinationArray } from \"./keyCreator\";\r\nlet emptyKeyArray = [];\r\n\r\nfunction StructureCreator({ serialNo, question, num, keyCreator, extraField }) {\r\n  keyCreator(question);\r\n\r\n  const structureHTML = `\r\n    <div class=\"section\">\r\n              <div class=\"rows\">\r\n                <div class=\"col-1 text-center\">\r\n                  <p class=\"num-label\">${serialNo}</p>\r\n                </div>\r\n                <div class=\"col-11\">\r\n                  <label class=\"ors-form-label\">${question}</label>\r\n                  <div class=\"rows\">\r\n                    <div class=\"col-3 main-radio\" data-fieldtype=\"radio-group\" data-bind=\"foreach:{\r\n                        data:[\r\n                          {id:'yes',label:'Yes'},\r\n                          {id:'no',label:'No'}\r\n                        ],\r\n                        as:'option'\r\n                      }\">\r\n                      <div class=\"radio-common\"\r\n                        data-bind=\"css:{'selected':vm.formData.${newAllQuestionKeyCombinationArray[num - 1]\r\n    }()===option.id}\">\r\n                        <input type=\"radio\" name=\"${newAllQuestionKeyCombinationArray[num - 1]\r\n    }\" data-bind=\"\r\n                            checkedValue: option.id,\r\n                            checked: vm.formData.${newAllQuestionKeyCombinationArray[num - 1]\r\n    }, \r\n                            attr:{\r\n                              id:'${newAllQuestionKeyCombinationArray[num - 1]\r\n    }'+'-'+option.id,disabled:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]\r\n    }')\r\n                            }\" />\r\n                        <label\r\n                          data-bind=\"text:option.label, attr:{for:'${newAllQuestionKeyCombinationArray[num - 1]\r\n    }'+'-'+option.id}\"></label>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-9 ors-form-control textarea-input\" data-fieldtype=\"textarea\">\r\n                      <textarea class=\"textarea-text\" name=\"${newAllQuestionKeyCombinationArray[num - 1]\r\n    }_remarks\"\r\n                        placeholder=\"Remarks by Auditor\" style=\"height: 30px;\"\r\n                        data-bind=\"expandable:{min:1},value:vm.formData.${newAllQuestionKeyCombinationArray[num - 1]\r\n    }_remarks,attr:{readonly:vm.isReadOnlyField('${newAllQuestionKeyCombinationArray[num - 1]\r\n    }_remarks')}\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n               `;\r\n  return (\r\n    <>\r\n      {structureHTML} <br />\r\n    </>\r\n  );\r\n}\r\nexport default StructureCreator;\r\n","C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\footer.js",[],[],"C:\\Users\\shail\\OneDrive\\Documents\\GitHub\\form-builder\\form-builder\\src\\apiListCreator.js",["64"],[],{"ruleId":"65","severity":1,"message":"66","line":2,"column":20,"nodeType":"67","messageId":"68","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":37,"column":36,"nodeType":"71","messageId":"72","endLine":48,"endColumn":6},{"ruleId":"65","severity":1,"message":"73","line":2,"column":5,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":6,"column":23,"nodeType":"71","messageId":"76","endLine":6,"endColumn":25},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'wordsArray', 'wordsArray', 'wordsArray'.","ArrowFunctionExpression","unsafeRefs","'emptyKeyArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside"]